upstream client {
    server client:8080;
}

upstream api {
    server api:5000;
}

server {
    listen 80;

    # Handle HTTPS challenge files
    location /.well-known/acme-challenge/ {
        root /var/www/certbot
    }

    location / {
        proxy_pass http://client;
    }

    # Enable sockets (not used at the moment but might be in the future)
    location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /api {
        # Note: we are not doing that here b/c we also have the /uploads endpoint on the server and cutting the /api adds some confusion to the endpoint types
        # rewrite /api/(.*) /$1 break; # Cut off the /api part and just pass the remainder to the server
        proxy_pass http://api;
    }

    location /uploads {
        proxy_pass http://api;
    }
}

server {
    listen 443 ssl;
    server_name alexgreff.com;
    server_tokens off;

    # Handle HTTPS certificates
    ssl_certificate /etc/letsencrypt/live/alexgreff.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/alexgreff.com/privkey.pem;
    # Include LetsEncrypt's best practice nginx config files
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://alexgreff.com;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }
}