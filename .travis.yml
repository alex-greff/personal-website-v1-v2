sudo: required
services:
    - docker
addons:
    ssh_known_hosts:
        - $DROPLET_IP
env:
    global:
        - SHA=$(git rev-parse HEAD)
branches:
    only:
        - master
        - staging
before_install:
    - openssl aes-256-cbc -K $encrypted_bacf9fc6807e_key -iv $encrypted_bacf9fc6807e_iv -in travis_rsa.enc -out travis_rsa -d
    - eval "$(ssh-agent -s)"
    - chmod 600 ./travis_rsa
    - echo -e "Host $DROPLET_IP\nStrictHostKeyChecking no\n" >> ~/.ssh/config
    - ssh-add ./travis_rsa
    - docker build -t alexgreff/personal-website-client-test -f ./client/Dockerfile.dev ./client
script:
    - docker run alexgreff/personal-website-client-test npm run test:coverage
after_success:
    - docker build -t alexgreff/personal-website-client:latest -t alexgreff/personal-website-client:$SHA -f ./client/Dockerfile ./client
    - docker build -t alexgreff/personal-website-server:latest -t alexgreff/personal-website-server:$SHA -f ./server/Dockerfile ./server
    - docker build -t alexgreff/personal-website-nginx:latest -t alexgreff/personal-website-nginx:$SHA -f ./nginx/Dockerfile ./nginx
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
    - docker push alexgreff/personal-website-client:latest
    - docker push alexgreff/personal-website-server:latest
    - docker push alexgreff/personal-website-nginx:latest
    - docker push alexgreff/personal-website-client:$SHA
    - docker push alexgreff/personal-website-server:$SHA
    - docker push alexgreff/personal-website-nginx:$SHA
after_script:
    # - echo "USERNAME (travis) $PERSONAL_WEBSITE_MONGO_USERNAME"
    # - ssh -i ./travis_rsa travis@$DROPLET_IP echo "USERNAME (droplet) $PERSONAL_WEBSITE_MONGO_USERNAME"
    # - ssh -i ./travis_rsa travis@$DROPLET_IP cd /var/app && docker-compose up -d

    # Setup and send the production environment variables over
    # - echo 'SHA='$SHA'' > sshenv
    # - echo 'PERSONAL_WEBSITE_MONGO_URI='$PERSONAL_WEBSITE_MONGO_URI'' >> sshenv
    # - echo 'PERSONAL_WEBSITE_MONGO_USERNAME='$PERSONAL_WEBSITE_MONGO_USERNAME'' >> sshenv
    # - echo 'PERSONAL_WEBSITE_MONGO_PASSWORD='$PERSONAL_WEBSITE_MONGO_PASSWORD'' >> sshenv
    # - echo 'PERSONAL_WEBSITE_JWT_SECRET='$PERSONAL_WEBSITE_JWT_SECRET'' >> sshenv
    # - echo 'PERSONAL_WEBSITE_JWT_TOKEN_EXPIRE_TIME='$PERSONAL_WEBSITE_JWT_TOKEN_EXPIRE_TIME'' >> sshenv
    # - echo 'TRAVIS_USER_PASSWORD='$TRAVIS_USER_PASSWORD'' >> sshenv
    # - scp -i ./travis_rsa sshenv travis@$DROPLET_IP:~/.ssh/environment

    - echo "Travis Pass $TRAVIS_USER_PASSWORD"

    # Send the docker-compose.yml file over
    - scp -i ./travis_rsa ./docker-compose.yml travis@$DROPLET_IP:/var/app/docker-compose.yml

    # Send the deploy.sh file over
    - scp -i ./travis_rsa ./deploy.sh travis@$DROPLET_IP:/var/app/deploy.sh

    - echo "ALL ENVS $(export -p)"
    # Ssh in and run the deploy.sh file on the droplet
    # - ssh -i ./travis_rsa travis@$DROPLET_IP 'cd /var/app && sudo bash ./deploy.sh'
    # - cat ./deploy.sh | ssh -i ./travis_rsa travis@$DROPLET_IP
    # - ssh -i ./travis_rsa travis@$DROPLET_IP 'cd /var/app && echo "Pass '$TRAVIS_USER_PASSWORD'" && echo "'$TRAVIS_USER_PASSWORD'" | sudo -S -E bash ./deploy.sh'
    - $(export -p; cat ./deploy.sh) | ssh -i ./travis_rsa travis@$DROPLET_IP 'bash -s'

# deploy:
#     provider: script
#     script: bash ./deploy.sh
#     on:
#         branch: master